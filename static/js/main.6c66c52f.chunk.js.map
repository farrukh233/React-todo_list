{"version":3,"sources":["components/TaskField.jsx","App.js","index.js","components/ListItem.jsx"],"names":["TaskField","onAddTask","React","useState","text","setText","addTask","className","value","onChange","event","currentTarget","type","placeholder","onKeyUp","keyCode","onClick","width","height","viewBox","fill","xmlns","d","App","completed","tasks","setTasks","onToggleCompleted","index","prevTask","map","task","curIdx","onRemoveTask","filter","_","prevTasks","ListItem","ReactDOM","render","StrictMode","document","getElementById","global","confirm"],"mappings":"qPAEaA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1B,EAAwBC,IAAMC,SAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAOMC,EAAU,WACVF,IACFH,EAAUG,GACVC,EAAQ,MAUZ,OACE,sBAAKE,UAAU,kBAAf,UACE,uBACEC,MAAOJ,EACPK,SAtBoB,SAAAC,GACxB,IAAMF,EAAQE,EAAMC,cAAcH,MAClCH,EAAQG,IAqBJI,KAAK,OACLC,YAAY,8GACZC,QAbc,SAAAJ,GACI,KAAlBA,EAAMK,SACRT,OAaA,wBAAQU,QAASV,EAASC,UAAU,yBAApC,SACE,qBACEU,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAME,sBACEC,EAAE,muBACFF,KAAK,oBCkCFG,MAvEf,WACE,MAA0BrB,IAAMC,SAAS,CACvC,CACEC,KAAM,qDACNoB,WAAW,GAEb,CACEpB,KAAM,uEACNoB,WAAW,KAPf,mBAAOC,EAAP,KAAcC,EAAd,KAWMC,EAAoB,SAAAC,GACxBF,GAAS,SAAAG,GACP,OAAOA,EAASC,KAAI,SAACC,EAAMC,GACzB,OAAIJ,IAAUI,EACL,2BACFD,GADL,IAEEP,WAAYO,EAAKP,YAGdO,SAKPE,EAAe,SAAAL,GACnBF,GAAS,SAAAG,GAAQ,OACfA,EAASK,QAAO,SAACC,EAAGH,GAClB,OAAIJ,IAAUI,SAkBpB,OACE,sBAAKzB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,uGAGF,cAAC,EAAD,CAAWN,UAhBG,SAAAG,GAChBsB,GAAS,SAAAU,GAAS,4BACbA,GADa,CAEhB,CACEhC,OACAoB,WAAW,WAab,qBAAKjB,UAAU,aAAf,SACGkB,EAAMK,KAAI,SAACC,EAAMH,GAAP,OACT,cAACS,EAAA,EAAD,CAEET,MAAOA,EACPxB,KAAM2B,EAAK3B,KACXoB,UAAWO,EAAKP,UAChBG,kBAAmBA,EACnBM,aAAcA,GALTL,YCxDjBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,gCCV1B,8DAEaL,EAAW,SAAC,GAMlB,IALLjC,EAKI,EALJA,KACAoB,EAII,EAJJA,UACAI,EAGI,EAHJA,MACAD,EAEI,EAFJA,kBACAM,EACI,EADJA,aAYA,OACE,sBACE1B,UAAS,0BACPiB,EAAS,6BAAkC,IAF/C,UAIE,qBAAKR,QAfe,WACtBW,EAAkBC,IAcerB,UAAU,wBAAzC,SACE,qBACEU,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAME,sBACEC,EAAE,+EACFF,KAAK,cAIX,4BAAIhB,IACJ,qBAAKY,QAzBU,WACb2B,EAAOC,QAAQ,gDACjBX,EAAaL,IAuBarB,UAAU,yBAApC,SACE,qBACEU,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAME,sBACEC,EAAE,0PACFF,KAAK,sB","file":"static/js/main.6c66c52f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const TaskField = ({ onAddTask }) => {\r\n  const [text, setText] = React.useState(\"\");\r\n\r\n  const handleInputChange = event => {\r\n    const value = event.currentTarget.value;\r\n    setText(value);\r\n  };\r\n\r\n  const addTask = () => {\r\n    if (text) {\r\n      onAddTask(text);\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = event => {\r\n    if (event.keyCode === 13) {\r\n      addTask();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='todo__add-field'>\r\n      <input\r\n        value={text}\r\n        onChange={handleInputChange}\r\n        type='text'\r\n        placeholder='Введите текст задач...'\r\n        onKeyUp={handleKeyUp}\r\n      />\r\n      <button onClick={addTask} className='todo__add-filed-button'>\r\n        <svg\r\n          width='18'\r\n          height='18'\r\n          viewBox='0 0 18 18'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'>\r\n          <path\r\n            d='M16.875 7.875H10.125V1.125C10.125 0.826631 10.0065 0.540484 9.79549 0.329505C9.58452 0.118527 9.29837 0 9 0C8.70163 0 8.41548 0.118527 8.20451 0.329505C7.99353 0.540484 7.875 0.826631 7.875 1.125V7.875H1.125C0.826631 7.875 0.540484 7.99353 0.329505 8.20451C0.118527 8.41548 0 8.70163 0 9C0 9.29837 0.118527 9.58452 0.329505 9.79549C0.540484 10.0065 0.826631 10.125 1.125 10.125H7.875V16.875C7.875 17.1734 7.99353 17.4595 8.20451 17.6705C8.41548 17.8815 8.70163 18 9 18C9.29837 18 9.58452 17.8815 9.79549 17.6705C10.0065 17.4595 10.125 17.1734 10.125 16.875V10.125H16.875C17.1734 10.125 17.4595 10.0065 17.6705 9.79549C17.8815 9.58452 18 9.29837 18 9C18 8.70163 17.8815 8.41548 17.6705 8.20451C17.4595 7.99353 17.1734 7.875 16.875 7.875Z'\r\n            fill='#C7C7C7'\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ListItem } from \"./components/ListItem\";\r\nimport { TaskField } from \"./components/TaskField\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = React.useState([\r\n    {\r\n      text: \"Изучить ReactJS\",\r\n      completed: true,\r\n    },\r\n    {\r\n      text: \"Сделать TODO на ReactJS\",\r\n      completed: false,\r\n    },\r\n  ]);\r\n\r\n  const onToggleCompleted = index => {\r\n    setTasks(prevTask => {\r\n      return prevTask.map((task, curIdx) => {\r\n        if (index === curIdx) {\r\n          return {\r\n            ...task,\r\n            completed: !task.completed,\r\n          };\r\n        }\r\n        return task;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onRemoveTask = index => {\r\n    setTasks(prevTask =>\r\n      prevTask.filter((_, curIdx) => {\r\n        if (index !== curIdx) {\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  };\r\n\r\n  const onAddTask = text => {\r\n    setTasks(prevTasks => [\r\n      ...prevTasks,\r\n      {\r\n        text,\r\n        completed: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className='todo'>\r\n      <div className='todo__header'>\r\n        <h4>Список задач</h4>\r\n      </div>\r\n\r\n      <TaskField onAddTask={onAddTask} />\r\n\r\n      <div className='todo__list'>\r\n        {tasks.map((task, index) => (\r\n          <ListItem\r\n            key={index}\r\n            index={index}\r\n            text={task.text}\r\n            completed={task.completed}\r\n            onToggleCompleted={onToggleCompleted}\r\n            onRemoveTask={onRemoveTask}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.scss\";\nimport \"./reset.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\r\n\r\nexport const ListItem = ({\r\n  text,\r\n  completed,\r\n  index,\r\n  onToggleCompleted,\r\n  onRemoveTask,\r\n}) => {\r\n  const toggleCompleted = () => {\r\n    onToggleCompleted(index);\r\n  };\r\n\r\n  const removeTask = () => {\r\n    if (global.confirm(\"Удалить?\")) {\r\n      onRemoveTask(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`todo__list-item ${\r\n        completed ? `todo__list-item--completed` : \"\"\r\n      }`}>\r\n      <div onClick={toggleCompleted} className='todo__list-item-check'>\r\n        <svg\r\n          width='24'\r\n          height='24'\r\n          viewBox='0 0 24 24'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'>\r\n          <path\r\n            d='M8.99999 16.2L4.79999 12L3.39999 13.4L8.99999 19L21 7L19.6 5.6L8.99999 16.2Z'\r\n            fill='white'\r\n          />\r\n        </svg>\r\n      </div>\r\n      <p>{text}</p>\r\n      <div onClick={removeTask} className='todo__list-item-remove'>\r\n        <svg\r\n          width='34'\r\n          height='30'\r\n          viewBox='0 0 34 30'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'>\r\n          <path\r\n            d='M26.9167 5H21.9583L20.5417 3.75H13.4583L12.0417 5H7.08333V7.5H26.9167V5ZM8.5 8.75V23.75C8.5 25.125 9.775 26.25 11.3333 26.25H22.6667C24.225 26.25 25.5 25.125 25.5 23.75V8.75H8.5ZM19.8333 17.5V22.5H14.1667V17.5H11.3333L17 12.5L22.6667 17.5H19.8333Z'\r\n            fill='#C5BCBC'\r\n          />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}